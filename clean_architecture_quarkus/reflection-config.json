[
	{
		"name": "java.beans.ConstructorProperties",
		"methods": [
			{
				"name": "value",
				"parameterTypes": []
			}
		]
	},
	{
		"name": "org.axonframework.commandhandling.CommandHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.common.Priority",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.config.ProcessingGroup",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.eventhandling.EventHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.eventhandling.GapAwareTrackingToken",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.ReplayToken",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.TrackingToken",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name": "org.axonframework.eventhandling.WrappedToken",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name": "org.axonframework.eventhandling.Timestamp",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name": "org.axonframework.messaging.MetaData",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name": "org.axonframework.serialization.upcasting.event.EventUpcaster",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name":"org.axonframework.serialization.upcasting.SingleEntryUpcaster",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name":"org.axonframework.serialization.upcasting.Upcaster",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name":"org.axonframework.serialization.upcasting.event.EventUpcaster",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name":"org.axonframework.serialization.upcasting.event.IntermediateEventRepresentation",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name":"org.axonframework.serialization.upcasting.event.SingleEventUpcaster",
		"allDeclaredConstructors": true,
		"allDeclaredMethods": true,
		"allDeclaredFields": true
	},
	{
		"name": "org.axonframework.modelling.command.AggregateIdentifier",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.modelling.command.AggregateRoot",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.modelling.command.EntityId",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.modelling.saga.SagaEventHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.queryhandling.QueryHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.messaging.annotation.MessageHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.eventsourcing.EventSourcingHandler",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.common.Priority",
		"allDeclaredMethods": true
	},
	{
		"name": "org.axonframework.serialization.converters.ByteArrayToInputStreamConverter",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.serialization.converters.BlobToInputStreamConverter",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.serialization.converters.InputStreamToByteArrayConverter",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.serialization.converters.ByteArrayToStringConverter",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.serialization.converters.StringToByteArrayConverter",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.common.property.UniformPropertyAccessStrategy",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.common.property.BeanPropertyAccessStrategy",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.common.property.DirectPropertyAccessStrategy",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.messaging.annotation.AnnotatedMessageHandlingMemberDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.commandhandling.MethodCommandHandlerDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.queryhandling.annotation.MethodQueryMessageHandlerDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.replay.ReplayAwareMessageHandlerWrapper",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.deadline.annotation.DeadlineMethodMessageHandlerDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.modelling.saga.SagaMethodMessageHandlerDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.modelling.command.inspection.MethodCommandHandlerInterceptorDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityMapDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.modelling.command.inspection.AggregateMemberAnnotatedChildEntityCollectionDefinition",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.commandhandling.CurrentUnitOfWorkParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.commandhandling.InterceptorChainParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.ConcludesBatchParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.SequenceNumberParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.TrackingTokenParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.TimestampParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventhandling.replay.ReplayParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.messaging.annotation.DefaultParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.messaging.annotation.MessageIdentifierParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.messaging.annotation.SourceIdParameterResolverFactory",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "org.axonframework.eventsourcing.conflictresolution.ConflictResolution",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	},
	{
		"name": "info.cepheus.clean_architecture_quarkus.domain.PersonAggregate",
		"allDeclaredFields": true,
		"allDeclaredMethods": true,
		"allDeclaredConstructors": true
	}
]